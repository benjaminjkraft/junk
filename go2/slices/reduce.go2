package slices

func Any(type T)(s []T, f func(T) bool) bool {
	for _, v := range s {
		if f(v) {
			return true
		}
	}
	return false
}

func All(type T)(s []T, f func(T) bool) bool {
	for _, v := range s {
		if !f(v) {
			return false
		}
	}
	return true
}

func Contains(type T comparable)(haystack []T, needle T) bool {
	return Any(haystack, func(val T) bool { return val == needle })
}
